---
- name: Reset Cluster
  ansible.builtin.shell:
    cmd: |
      kubeadm reset -f
      rm -f $HOME/.kube/config
      rm -rf /etc/kubernetes/*
      rm -rf /var/lib/docker/containers/*
      rm -rf /var/run/docker*
  when: RESET is defined
    
- name: "Create kubeadm init config yaml"
  copy:
    content: "{{ kubeadm_config_options | to_nice_yaml }}"
    dest: /tmp/kubeadm-config.yaml
    mode: 0644

- name: Initialize cluster
  ansible.builtin.shell:
    cmd: kubeadm init --config=/tmp/kubeadm-config.yaml 
    creates: /etc/kubernetes/kubelet.conf
  register: k8sinit_output

- name: Storing Logs and Generated token for nodes config
  ansible.builtin.copy:
    content: '{{ k8sinit_output.stdout }}'
    dest: cluster_join_file
  when: '"token" in k8sinit_output.stdout'

- name: Create .kube folder
  file:
    path: "~{{ ansible_ssh_user }}/.kube"
    state: directory
    owner: "{{ ansible_ssh_user }}"

- name: Copy admin.conf to .kube folder
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "~{{ ansible_ssh_user }}/.kube/config"
    owner: "{{ ansible_ssh_user }}"
    remote_src: yes

- name: Save kubeconfig locally
  ansible.builtin.fetch:
    flat: yes
    src: /etc/kubernetes/admin.conf
    dest: static/kubectl.conf
    fail_on_missing: yes

- name: "Fetching Kubernetes Master PKI files from primary master"
  fetch:
    src: /etc/kubernetes/pki/{{item}}
    dest: /tmp/kubeadm-ha/pki/{{item}}
    flat: yes
  with_items:
    - ca.crt
    - ca.key
    - sa.key
    - sa.pub
    - front-proxy-ca.crt 
    - front-proxy-ca.key

- name: "Fetching Kubernetes Master ETCD files from primary master"
  fetch:
    src: /etc/kubernetes/pki/etcd/{{item}}
    dest: /tmp/kubeadm-ha/pki/etcd/{{item}}
    flat: yes
  with_items:
    - ca.crt
    - ca.key

- name: "Fetching Kubernetes Master Admin files from primary master"
  fetch:
    src: /etc/kubernetes/{{item}}
    dest: /tmp/kubeadm-ha/{{item}}
    flat: yes
  with_items:
    - admin.conf 
